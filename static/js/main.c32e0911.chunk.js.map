{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","dispatch","a","jsonPlaceholder","get","response","type","payload","data","fetchUser","id","UserHeader","user","this","props","className","name","React","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostAndUser","posts","map","post","key","title","body","renderList","getState","_","chain","uniq","forEach","value","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"+QAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,wCCUAC,EAAa,yDAAM,WAAMC,GAAN,eAAAC,EAAA,sEACJC,EAAgBC,IAAI,UADhB,OACtBC,EADsB,OAG5BJ,EAAS,CACLK,KAAM,cACNC,QAASF,EAASG,OALM,2CAAN,uDASbC,EAAY,SAACC,GAAD,8CAAQ,WAAMT,GAAN,eAAAC,EAAA,sEACNC,EAAgBC,IAAhB,iBAA8BM,IADxB,OACvBL,EADuB,OAG7BJ,EAAS,CAAEK,KAAM,aAAcC,QAASF,EAASG,OAHpB,2CAAR,uDCnBnBG,E,uKAGO,IACEC,EAAOC,KAAKC,MAAZF,KAEP,OAAIA,EAIG,yBAAKG,UAAU,UAAUH,EAAKI,MAH1B,S,GAPMC,IAAMC,WAkBhBC,eAJS,SAACC,EAAOC,GAC5B,MAAO,CAAET,KAAMQ,EAAME,MAAMC,MAAK,SAAAX,GAAI,OAAIA,EAAKF,KAAOW,EAASG,aAGlDL,CAAyBR,GCflCc,E,kLAEEZ,KAAKC,MAAMY,qB,mCAIX,OAAOb,KAAKC,MAAMa,MAAMC,KAAI,SAAAC,GACxB,OACI,yBAAKd,UAAU,OAAOe,IAAKD,EAAKnB,IAC5B,uBAAGK,UAAU,mCACb,yBAAKA,UAAU,WACX,yBAAKA,UAAU,eACX,4BAAKc,EAAKE,OACV,2BAAIF,EAAKG,OAEb,kBAAC,EAAD,CAAYR,OAAQK,EAAKL,gB,+BASzC,OAAO,yBAAKT,UAAU,2BAA2BF,KAAKoB,kB,GAxBvChB,IAAMC,WAgCdC,eAJQ,SAAAC,GACnB,MAAO,CAAEO,MAAOP,EAAMO,SAKtB,CAACD,iBFrC2B,yDAAM,WAAOzB,EAAUiC,GAAjB,SAAAhC,EAAA,sEAC5BD,EAASD,KADmB,OAGlCmC,IAAEC,MAAMF,IAAWP,OACdC,IAAI,UACJS,OACAC,SAAQ,SAAA5B,GAAE,OAAIT,EAASQ,EAAUC,OACjC6B,QAP6B,2CAAN,0DEmCjBpB,CAGTM,GChCSe,EANH,WACR,OACI,yBAAKzB,UAAU,gBAAe,kBAAC,EAAD,Q,QCAvB0B,cAAgB,CAC3Bd,MCNW,WAAyB,IAAxBP,EAAuB,uDAAf,GAAIsB,EAAW,uCACnC,OAAOA,EAAOpC,MACV,IAAK,cACD,OAAOoC,EAAOnC,QAClB,QACI,OAAOa,IDEfE,MEPW,WAAyB,IAAxBF,EAAuB,uDAAf,GAAIsB,EAAW,uCACnC,OAAOA,EAAOpC,MACV,IAAK,aACD,MAAM,GAAN,mBAAWc,GAAX,CAAkBsB,EAAOnC,UAC7B,QACI,OAAOa,MCIbuB,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OAEJO,SAASC,cAAc,Y","file":"static/js/main.c32e0911.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'http://jsonplaceholder.typicode.com'\n})","import _ from 'lodash';\nimport jsonPlaceholder from '../apis/jsonPlaceholder'\n\nexport const fetchPostAndUser = () => async (dispatch, getState) => {\n    await dispatch(fetchPosts());\n\n    _.chain(getState().posts)\n        .map('userId')\n        .uniq()\n        .forEach(id => dispatch(fetchUser(id)))\n        .value()\n};\n\nexport const fetchPosts = () => async dispatch => {\n    const response =  await jsonPlaceholder.get('/posts');\n\n    dispatch({\n        type: 'FETCH_POSTS',\n        payload: response.data\n     });\n};\n\nexport const fetchUser = (id) => async dispatch => {\n    const response = await jsonPlaceholder.get(`/users/${id}`);\n\n    dispatch({ type: 'FETCH_USER', payload: response.data });\n};\n\n// export const fetchUser = (id) => dispatch => _fetchUser(id, dispatch);\n\n\n// const _fetchUser = _.memoize(async (id, dispatch) => {\n//     const response = await jsonPlaceholder.get(`/users/${id}`);\n\n//     dispatch({\n//         type: 'FETCH_USER',\n//         payload: response.data\n//     });\n// });","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass UserHeader extends React.Component {\n    \n\n    render(){\n        const {user} =this.props;\n\n        if(!user){\n            return null;\n        }\n\n        return <div className=\"header\">{user.name}</div>;\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { user: state.users.find(user => user.id === ownProps.userId ) };\n};\n\nexport default connect(mapStateToProps)(UserHeader);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPostAndUser } from '../actions';\nimport UserHeader from './UserHeader';\n\n\nclass PostList extends React.Component {\n    componentDidMount() {\n        this.props.fetchPostAndUser();\n    }\n\n    renderList() {\n        return this.props.posts.map(post => {\n            return (\n                <div className=\"item\" key={post.id}>\n                    <i className=\"large middle aligned icon user\" />\n                    <div className=\"content\">\n                        <div className=\"description\">\n                            <h2>{post.title}</h2>\n                            <p>{post.body}</p>\n                        </div>\n                        <UserHeader userId={post.userId} />\n                    </div>\n                </div>\n            );\n                \n        });\n    }\n\n    render() {\n        return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\n    }\n}\n\nconst mapStateToProps= state => {\n    return { posts: state.posts}\n};\n\nexport default connect(\n    mapStateToProps,\n    {fetchPostAndUser}\n    )(PostList);","import React from 'react';\nimport PostList from './PostList';\n\nconst App = () => {\n    return (\n        <div className=\"ui container\"><PostList /></div>\n    );\n};\n\nexport default App;","import { combineReducers } from 'redux';\nimport postsReducer from './postsReducer';\nimport usersReducer from './usersReducer';\n\n\nexport default combineReducers({\n    posts: postsReducer,\n    users: usersReducer\n});\n","export default (state = [], action) => {\n    switch(action.type){\n        case 'FETCH_POSTS':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\n","export default (state = [], action) => {\n    switch(action.type){\n        case 'FETCH_USER': \n            return [...state, action.payload];\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}